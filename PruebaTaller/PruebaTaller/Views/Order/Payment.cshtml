@{
    ViewData["Title"] = "Payment";
}

<div class="container my-5">
    <h2 class="text-center display-4 mb-5" style="color: #DA9D19; text-shadow: 2px 2px #000;">Proceed to Payment</h2>

    <!-- Mensajes de éxito o error -->
    @if (ViewBag.SuccessMessage != null)
    {
        <div class="alert alert-success" role="alert">
            <strong>Success!</strong> @ViewBag.SuccessMessage
        </div>
    }

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger" role="alert">
            <strong>Error!</strong> @ViewBag.ErrorMessage
        </div>
    }

    <!-- Métodos de Pago -->
    <div class="col-lg-6 mx-auto">
        <div class="card border-0 shadow-lg p-4" style="background: linear-gradient(135deg, #222831, #393e46); color: #E6FBFA; border-radius: 15px;">
            <h4 class="text-warning mb-4">Payment Methods</h4>

            <!-- Botón PayPal -->
            <div class="text-center mb-4">
                <div id="paypal-button-container"></div> <!-- Contenedor para el botón de PayPal -->
            </div>

            <hr class="text-muted">
        </div>
    </div>
</div>

<!-- Estilos personalizados -->
<style>
    body {
        background-color: #1c1e21;
    }

    .card {
        border-radius: 15px;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            transform: scale(1.02);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    h2 {
        text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.3);
    }

    hr {
        border-top: 1px solid rgba(255, 255, 255, 0.3);
    }
</style>

<!-- Script para PayPal -->
<script src="https://www.paypal.com/sdk/js?client-id=Afbj9DqPgOcWa9rc8FIVSq6AMWFIizLaXmhwOiskli1JQWHy2hNWPjPUGnHmisy9-FEuoOQkD1wJmnaE&currency=USD"></script>

<script>
    // Obtén el total dinámico desde el servidor
    const totalAmount = parseFloat("@ViewBag.TotalAmount"); // Convertimos a float para usarlo en JavaScript
    const shippingDetailsId = @ViewBag.ShippingDetailsId; // Pasar ShippingDetailsId desde el controlador

    if (!totalAmount || totalAmount <= 0) {
        console.error("El total de la orden no está configurado correctamente.");
    }

    paypal.Buttons({
        // Crear la orden en PayPal
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: totalAmount.toFixed(2) // Ahora puedes usar toFixed en JavaScript
                    }
                }]
            });
        },

        // Manejar la aprobación del pago
        onApprove: function (data, actions) {
            return actions.order.capture().then(function (details) {
                console.log("Pago aprobado:", details);

                if (!details || !data.orderID || !details.payer.payer_id) {
                    console.error("Datos del pago incompletos o inválidos.");
                    window.location.href = '/order/paymenterror'; // Cambié la ruta a '/order/paymenterror'
                    return;
                }

                // Preparar los datos del pago para enviar al backend
                const paymentData = {
                    paymentId: data.orderID, // ID de la orden en PayPal
                    payerId: details.payer.payer_id, // ID del pagador en PayPal
                    shippingDetailsId: shippingDetailsId // ID de los detalles de envío
                };

                // Enviar datos del pago al backend
                fetch('/order/completeorder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(paymentData)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error al procesar el pago.');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log("Respuesta del servidor:", data);
                        window.location.href = '/order/ordercompleted'; // Redirigir a la página de confirmación
                    })
                    .catch(error => {
                        console.error('Error al procesar el pago:', error);
                        window.location.href = '/order/paymenterror'; // Redirigir a la página de error
                    });
            });
        },

        // Manejar la cancelación del pago
        onCancel: function (data) {
            console.log('El pago fue cancelado');
            window.location.href = '/order/cancelorder'; // Redirigir a la página de cancelación
        },

        // Manejar errores en la configuración del botón
        onError: function (err) {
            console.error('Error en PayPal:', err);
            window.location.href = '/order/paymenterror'; // Redirigir a la página de error
        }
    }).render('#paypal-button-container'); // Renderizar el botón de PayPal
</script>
