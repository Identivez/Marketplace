@model List<Cart_Item>

@{
    ViewData["Title"] = "Your Shopping Cart";
}

<div class="container my-5">
    <h2 class="text-center display-4 mb-5" style="color: #ff7e5f;">Your Shopping Cart</h2>

    @* Mostrar mensaje si el carrito está vacío *@
    @if (Model == null || !Model.Any())
    {
        <p class="text-center my-5 fs-4">Your cart is empty! <i class="bi bi-cart-x"></i></p>
    }
    else
    {
        <div class="table-responsive">
            @* Tabla que muestra los artículos en el carrito *@
            <table class="table table-bordered mt-4" style="background-color: #fffaf0;">
                <thead class="table-light text-center" style="background-color: #ffecd2;">
                    <tr>
                        <th>Product</th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="text-center">
                            <td>
                                @* Mostrar la imagen del producto *@
                                <img src="@Url.Content($"~/images/products/{item.ImageFileName}")" class="rounded" style="height: 100px; width: auto; object-fit: contain;" alt="@item.Name" />
                            </td>
                            <td class="align-middle"><strong>@item.Name</strong></td>
                            <td class="align-middle text-success fs-5">@(item.Price.ToString("C"))</td>
                            <td class="align-middle">
                                @* Campo para actualizar la cantidad del artículo *@
                                <input type="number" name="quantities[@item.ProductId]" value="@item.Quantity" min="0" class="form-control text-center update-quantity" data-product-id="@item.ProductId" style="width: 80px; margin: auto;" />
                            </td>
                            <td class="align-middle text-primary fs-5">@((item.Price * item.Quantity).ToString("C"))</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="text-end mt-4">
            @* Mostrar el total del carrito *@
            <h4 class="text-success fw-bold">Total: @Model.Sum(x => x.Price * x.Quantity).ToString("C")</h4>
            <a href="#" class="btn btn-lg btn-success px-5 mt-3" style="background: linear-gradient(135deg, #00c853, #66ff66); border: none;">Proceed to Checkout</a>
        </div>
    }
</div>

@* Script para manejar la actualización de cantidades *@
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.update-quantity').on('change', function () {
            var productId = $(this).data('product-id');
            var quantity = $(this).val();

            $.ajax({
                url: '@Url.Action("UpdateCart", "Cart")',
                type: 'POST',
                data: {
                    quantities: { [productId]: quantity }
                },
                success: function (response) {
                    location.reload(); // Recargar la página para reflejar los cambios
                }
            });
        });
    });
</script>

@* Estilos para mejorar la apariencia de la tabla y los botones *@
<style>
    body {
        background-color: #f8f9fa; /* Fondo sutil para toda la página */
    }

    .table th,
    .table td {
        vertical-align: middle;
    }

    .table img {
        transition: transform 0.3s ease-in-out;
    }

        .table img:hover {
            transform: scale(1.1); /* Efecto de agrandamiento al pasar el ratón sobre la imagen */
        }

    .btn-success {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #66ff66, #00c853);
        }
</style>
